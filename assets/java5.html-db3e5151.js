import{_ as a,r as e,o as p,c as t,e as o,a as n}from"./app-9add14af.js";const c={},l=n(`<h1 id="第五章" tabindex="-1"><a class="header-anchor" href="#第五章" aria-hidden="true">#</a> 第五章</h1><p>while循环： 1.循环解决的问题：重复的操作</p><p>2.循环基本语法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">while</span>（循环条件）<span class="token punctuation">{</span>
	循环操作
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>符合条件，执行循环操作：否则，循环退出</p><p>3.while循环特点：先判断，再执行</p><p>do-while循环：</p><p>1）语法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">do</span><span class="token punctuation">{</span>
	<span class="token comment">//循环操作</span>
<span class="token punctuation">}</span> <span class="token keyword">while</span><span class="token punctuation">(</span>循环条件<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）do-while循环特点：先执行，后判断</p>`,10),i=n(`<div class="custom-container tip"><p class="custom-container-title">while和do-while的区别？</p><p>1.语法不同</p><p>2.执行次序不同</p><p>初始情况不满足循环条件时：</p><p>while循环一次都不会执行</p><p>do-while循环不管任何情况都至少执行一次</p></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入工资&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">double</span> salary <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">double</span> rate <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>salary <span class="token operator">&lt;=</span> <span class="token number">850</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	rate <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>salary <span class="token operator">&lt;=</span> <span class="token number">1350</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	rate <span class="token operator">=</span> <span class="token number">0.05</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>salary <span class="token operator">&lt;=</span> <span class="token number">2850</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	rate <span class="token operator">=</span> <span class="token number">0.10</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>salary <span class="token operator">&lt;=</span> <span class="token number">5850</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	rate <span class="token operator">=</span> <span class="token number">0.15</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">double</span> tax <span class="token operator">=</span> rate <span class="token operator">*</span> <span class="token punctuation">(</span>salary <span class="token operator">-</span> <span class="token number">850</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function u(r,d){const s=e("Badge");return p(),t("div",null,[l,o(s,{type:"tip",text:"do-while要至少执行循环操作一次"}),i])}const v=a(c,[["render",u],["__file","java5.html.vue"]]);export{v as default};
