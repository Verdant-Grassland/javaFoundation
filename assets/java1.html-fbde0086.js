import{_ as a,o as s,c as n,a as e}from"./app-9add14af.js";const t={},o=e(`<h1 id="第一章" tabindex="-1"><a class="header-anchor" href="#第一章" aria-hidden="true">#</a> 第一章</h1><p><strong>JavaSE</strong>：桌面应用程序开发.比如：开发银行提款机软件、播放器、防火墙等。</p><p><strong>JavaEE</strong>：企业级应用开发。比如：超市的收银软件、医院管理软件、物业收费软件等</p><h1 id="jdk环境变量配置" tabindex="-1"><a class="header-anchor" href="#jdk环境变量配置" aria-hidden="true">#</a> jdk环境变量配置：</h1><p><strong>1.</strong> 计算机---&gt;属性---&gt;更改设置--&gt;高级---&gt;环境变量</p><p><strong>2.</strong> 系统变量。单击新建：</p><p><strong>变量名：</strong> JAVA_HOME</p><p><strong>变量值</strong>：C：\\Program Files\\Java\\jdk1.7.0_67</p><p><strong>3.点击新建，新建变量：</strong></p><p><strong>变量名：</strong> CLASSPATH</p><p><strong>变量值：</strong>.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar</p><p><strong>4.在变量列表里找到:path变量</strong></p><div class="custom-container danger"><p class="custom-container-title">警告</p><p><strong>变量值：</strong> 前面的变量不要删除。加入如下设置： ;%JAVA_HOME%\\bin</p></div><p>为什么配置环境变量呢？我们想在任何的盘符上都能执行java的命令</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>建立的java文件名和类的名字必须一样</p></div><p>应用记事本开发java程序：</p><p>1.使用记事本编辑源程序，以.java为后缀名保存.如：HelloWorld.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span><span class="token punctuation">{</span>
	<span class="token comment">//主程序入口。所有的代码加入在入口里面，才能被执行</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> main <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args）<span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hellworld&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">//输出字符串HelloWorld</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.使用javac命令编译.java文件，生成.class文件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>javac <span class="token class-name">HelloWorld</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3.使用java命令运行.class文件，输出程序结果</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>java <span class="token class-name">HelloWorld</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,22),p=[o];function l(c,i){return s(),n("div",null,p)}const d=a(t,[["render",l],["__file","java1.html.vue"]]);export{d as default};
